##max = min*10
##running = True
##result = 0
##while running:
##	test = random.randrange(min,max)
##	print test
##	count = factors(test)
##	if count > 500:
##		max = test
##	elif count < 500:
##		min = test
##	else:
##		result = test
##		break
##print result

#	The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
#	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
#	Let us list the factors of the first seven triangle numbers:
#
#			 1: 1
#			 3: 1,3
#			 6: 1,2,3,6
#			10: 1,2,5,10
#			15: 1,3,5,15
#			21: 1,3,7,21
#			28: 1,2,4,7,14,28
#
#	We can see that 28 is the first triangle number to have over five divisors.
#
#	What is the value of the first triangle number to have over five hundred divisors?

import math

def factors(number):
	factorlist = [1]
	i = 2
	while(number != 1):
		if number%i == 0:
			oldfactors = factorlist[:]
			for factor in oldfactors:
				product = factor*i
				if product not in oldfactors:
					factorlist.append(product)
			number /= i
		else:
			i += 1
	return factorlist

sum = 0
for i in xrange(1,10**10):
	sum += i
	if len(factors(sum)) > 500:
		print sum
		break